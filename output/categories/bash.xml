<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Greg's Tech Notes (Posts about bash)</title><link>https://stencel.io/</link><description></description><atom:link href="https://stencel.io/categories/bash.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2025 &lt;a href="mailto:gstencel@gmail.com"&gt;Greg Stencel&lt;/a&gt; </copyright><lastBuildDate>Fri, 11 Apr 2025 06:59:43 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Linux diplay size of each subdirectory</title><link>https://stencel.io/posts/linux-diplay-size-of-each-subdirectory.html</link><dc:creator>Greg Stencel</dc:creator><description>&lt;p&gt;To display total size of each subdirectory&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_aad3702a17784ff2a58c5c0fcdfad0b7-1" name="rest_code_aad3702a17784ff2a58c5c0fcdfad0b7-1" href="https://stencel.io/posts/linux-diplay-size-of-each-subdirectory.html#rest_code_aad3702a17784ff2a58c5c0fcdfad0b7-1"&gt;&lt;/a&gt;du&lt;span class="w"&gt; &lt;/span&gt;-sh&lt;span class="w"&gt; &lt;/span&gt;*
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;-h human readable displays MB and GB instead of milions and bilions of bytes :)
-s summarize total size of dir&lt;/p&gt;</description><category>bash</category><category>Linux</category><guid>https://stencel.io/posts/linux-diplay-size-of-each-subdirectory.html</guid><pubDate>Tue, 01 Jul 2014 12:31:07 GMT</pubDate></item><item><title>running-scripts-in-background-linux</title><link>https://stencel.io/posts/running-scripts-in-background-linux.html</link><dc:creator>Greg Stencel</dc:creator><description>&lt;p&gt;I used to execute a lot of commands with &amp;amp; at the end. But once I used plowshare and it didnt work because &amp;amp; works until
you wont log out .So my solution (I know I could use nohup :) ) was screen. Screen is the best tool admin can use when working
remotely. It can be usefull when you're in place with big packet loss and you often lost connection so when you're
restoring database  you should be in screen session because when something will disconnect you you can alwas log in and
connect to screen session in which restoring is taking place.&lt;/p&gt;
&lt;p&gt;So executing&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_48cc0181b9c148de9fac89a339371b14-1" name="rest_code_48cc0181b9c148de9fac89a339371b14-1" href="https://stencel.io/posts/running-scripts-in-background-linux.html#rest_code_48cc0181b9c148de9fac89a339371b14-1"&gt;&lt;/a&gt;$./my_script.sh&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;will be only running when your session is still active so when you'll logout it will be killed.&lt;/p&gt;
&lt;p&gt;To run it independent from your presence on server do it with nohup:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_81bee0de322d49c7b728744650c993de-1" name="rest_code_81bee0de322d49c7b728744650c993de-1" href="https://stencel.io/posts/running-scripts-in-background-linux.html#rest_code_81bee0de322d49c7b728744650c993de-1"&gt;&lt;/a&gt;$&lt;span class="w"&gt; &lt;/span&gt;nohup&lt;span class="w"&gt; &lt;/span&gt;./my_script.sh&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To launch screen :&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_16d93f33fac54238a86d3b710bf0d56e-1" name="rest_code_16d93f33fac54238a86d3b710bf0d56e-1" href="https://stencel.io/posts/running-scripts-in-background-linux.html#rest_code_16d93f33fac54238a86d3b710bf0d56e-1"&gt;&lt;/a&gt;$&lt;span class="w"&gt; &lt;/span&gt;screen
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Best practice is to launch screen with its name :&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_b5e568baadb34616a6c7193d8352d94f-1" name="rest_code_b5e568baadb34616a6c7193d8352d94f-1" href="https://stencel.io/posts/running-scripts-in-background-linux.html#rest_code_b5e568baadb34616a6c7193d8352d94f-1"&gt;&lt;/a&gt;$&lt;span class="w"&gt; &lt;/span&gt;screen&lt;span class="w"&gt; &lt;/span&gt;-S&lt;span class="w"&gt; &lt;/span&gt;my_own_screen_name
&lt;/pre&gt;&lt;/div&gt;
Then if you want detach screen to get back later

&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;a&lt;/kbd&gt;&lt;kbd&gt;d&lt;/kbd&gt;

If you want terminate screen just
&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;d&lt;/kbd&gt; or exit&lt;p&gt;then you can resume it with:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_ef9ebd7a4c384ef592e1a661054c2f32-1" name="rest_code_ef9ebd7a4c384ef592e1a661054c2f32-1" href="https://stencel.io/posts/running-scripts-in-background-linux.html#rest_code_ef9ebd7a4c384ef592e1a661054c2f32-1"&gt;&lt;/a&gt;$&lt;span class="w"&gt; &lt;/span&gt;screen&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;my_own_screen_name
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To list all available screens :&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_4114683c04f44b91a4cc054d0cb76f90-1" name="rest_code_4114683c04f44b91a4cc054d0cb76f90-1" href="https://stencel.io/posts/running-scripts-in-background-linux.html#rest_code_4114683c04f44b91a4cc054d0cb76f90-1"&gt;&lt;/a&gt;$&lt;span class="w"&gt; &lt;/span&gt;screen&lt;span class="w"&gt; &lt;/span&gt;-ls
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To attach to already attached screen:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_438bcf8f632b4f85aeff0903b794bf3b-1" name="rest_code_438bcf8f632b4f85aeff0903b794bf3b-1" href="https://stencel.io/posts/running-scripts-in-background-linux.html#rest_code_438bcf8f632b4f85aeff0903b794bf3b-1"&gt;&lt;/a&gt;$&lt;span class="w"&gt; &lt;/span&gt;screen&lt;span class="w"&gt; &lt;/span&gt;-x&lt;span class="w"&gt; &lt;/span&gt;my_own_screen_name
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To attach to attached screen and detach others:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code bash"&gt;&lt;a id="rest_code_8db5850cdb494dc0876ae127bb993aae-1" name="rest_code_8db5850cdb494dc0876ae127bb993aae-1" href="https://stencel.io/posts/running-scripts-in-background-linux.html#rest_code_8db5850cdb494dc0876ae127bb993aae-1"&gt;&lt;/a&gt;$&lt;span class="w"&gt; &lt;/span&gt;screen&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;my_own_screen_name
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To rename existing screen:&lt;/p&gt;
(being attached):

&lt;kbd&gt;Ctrl&lt;/kbd&gt;&lt;kbd&gt;a&lt;/kbd&gt;:sessionname my_screen_name&lt;kbd&gt;Enter&lt;/kbd&gt;</description><category>bash</category><category>Linux</category><guid>https://stencel.io/posts/running-scripts-in-background-linux.html</guid><pubDate>Tue, 13 May 2014 14:01:14 GMT</pubDate></item><item><title>shell_productivity</title><link>https://stencel.io/posts/shell_productivity.html</link><dc:creator>Greg Stencel</dc:creator><description>&lt;section id="bash-zsh-terminal-productivity"&gt;
&lt;h2&gt;Bash / ZSH Terminal productivity&lt;/h2&gt;
&lt;p&gt;:w&lt;/p&gt;
&lt;kbd&gt;ctrl&lt;/kbd&gt;&lt;kbd&gt;u&lt;/kbd&gt; clear whole line &lt;br&gt;
&lt;kbd&gt;ctrl&lt;/kbd&gt;&lt;kbd&gt;k&lt;/kbd&gt; clear everything after curson&lt;br&gt;
&lt;kbd&gt;ctrl&lt;/kbd&gt;&lt;kbd&gt;w&lt;/kbd&gt; clear everything before curson&lt;br&gt;
&lt;kbd&gt;ctrl&lt;/kbd&gt;&lt;kbd&gt;a&lt;/kbd&gt; set cursor at the beginning (home)&lt;br&gt;
&lt;kbd&gt;ctrl&lt;/kbd&gt;&lt;kbd&gt;e&lt;/kbd&gt; set cursor at the end (end)&lt;br&gt;
&lt;kbd&gt;ctrl&lt;/kbd&gt;&lt;kbd&gt;y&lt;/kbd&gt; undo last clear or repeat after second hit&lt;br&gt;
&lt;kbd&gt;ctrl&lt;/kbd&gt;&lt;kbd&gt;l&lt;/kbd&gt; clears screen &lt;br&gt;
&lt;kbd&gt;ctrl&lt;/kbd&gt;&lt;kbd&gt;r&lt;/kbd&gt; search in you history commands type twice to select next candidate&lt;br&gt;
&lt;kbd&gt;ESC&lt;/kbd&gt;&lt;kbd&gt;t&lt;/kbd&gt; Swap the last two words before the cursor&lt;br&gt;
&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;f&lt;/kbd&gt; Move cursor every word forward&lt;br&gt;
&lt;kbd&gt;Alt&lt;/kbd&gt;&lt;kbd&gt;b&lt;/kbd&gt; Move cursoor every word backward&lt;br&gt;
&lt;kbd&gt;ctrl&lt;/kbd&gt;&lt;kbd&gt;_&lt;/kbd&gt; Undo the last change&lt;/section&gt;</description><category>bash</category><category>bash shortcuts</category><category>shell productivity</category><category>zsh</category><category>zsh shortcuts</category><guid>https://stencel.io/posts/shell_productivity.html</guid><pubDate>Mon, 28 Apr 2014 12:11:12 GMT</pubDate></item></channel></rss>